C figure9
{ [x] = 0; [y] = 0; }

P0 (volatile int* x, volatile int* y) {
  atomic_store_explicit(y, 1, memory_order_relaxed);
  atomic_thread_fence(memory_order_release);
  int t1 = atomic_load_explicit(x, memory_order_relaxed);
  atomic_store_explicit(x, t1, memory_order_relaxed);
}

P1 (volatile int* x, volatile int* y) {
  int t2 = WCAS(x, 0, 1, memory_order_acquire, memory_order_relaxed);
  int t3 = atomic_load_explicit(y, memory_order_relaxed);
}

// Need join of P0/P1 followed by
int t4 = atomic_load_explicit(x, memory_order_relaxed);
