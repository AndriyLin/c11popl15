C A3v2
{ [x] = 0; [y] = 0; [z] = 0; }

P0 (volatile int* x, volatile int* y) {
  *y = 1;
  atomic_store_explicit(x, 1, memory_order_release);
}

P1 (volatile int* x, volatile int* y) {
  int r0 = SCAS(x, z, 1, memory_order_acquire, memory_order_relaxed);
  if (r0 == 0) { // cas must have returned false to exit elided while loop
    int r1 = atomic_load_explicit(y, memory_order_relaxed);
  }
}

exists (1:r1=1)
