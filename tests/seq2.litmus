C seq_transformed
{ [a] = 0; [x] = 0; [y] = 0; }

P0 (volatile int* a, volatile int* x, volatile int* y) {
  *a = 1;
  int r0 = atomic_load_explicit(x, memory_order_relaxed);
  if (r0) {
    int r1 = *a;
    if (r1) {
      atomic_store_explicit(y, 1, memory_order_relaxed);
    }
  }
}

P1 (volatile int* a, volatile int* x, volatile int* y) {
  int r2 = atomic_load_explicit(y, memory_order_relaxed);
  if (r2) {
    atomic_store_explicit(x, 1, memory_order_relaxed);
  }
}

exists (0:r0=1 /\ 0:r1=1 /\ 1:r2=1)
